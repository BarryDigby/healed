/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/


/*
  Most of the params I have defines are based on the
  boolean flag 'toggle_rna' which is not accessible
  in the scope of this config file. It is resolved
  in the script pre-amble
*/


process {

    withName: '.*:BAM_ABRA2:CRAM_TO_BAM' {
        ext.args   = "-b"
        publishDir = [
            // Not interested in saving this
            enabled: false
        ]
    }

    withName: '.*:BAM_ABRA2:ABRA2_DNA' {
        ext.prefix = { "${meta2.id}.abra2_realigned" }
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/preprocessing/" },
            pattern: "*{bam,bai}",
            // Save bam if save mapped, save as bam and single BAM per file.
            saveAs: { params.save_output_as_bam && ( params.abra2_realigned || params.dna_snv_indel.contains("abra_cadabra") ) ? "abra2/${meta.id}/${it}" : null }
        ]
    }

    withName: '.*:BAM_ABRA2:BAM_TO_CRAM' {
        ext.prefix = { "${meta.id}.abra2_realigned" }
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/preprocessing/" },
            pattern: "*{cram,crai}",
            // Save bam if save mapped, save as bam and single BAM per file.
            saveAs: { (params.abra2_realigned || params.dna_snv_indel.contains("abra_cadabra")) ? "abra2/${meta.id}/${it}" : null }
        ]
    }

    withName: '.*:BAM_ABRA2:ABRA2_RNA' {
        ext.prefix = { "${meta.id}.abra2_realigned" }
        ext.args   = [
            "--sua",
            "--dist 5000"
        ].join( ).trim()
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/preprocessing/" },
            pattern: "*{bam,bai}",
            // Save bam if save mapped, save as bam and single BAM per file.
            saveAs: { params.save_output_as_bam && params.abra2_realigned ? "abra2/${meta.id}/${it}" : null }
        ]
    }

    withName: '.*:BAM_ABRA2:BAM_TO_CRAM_RNA' {
        ext.prefix = { "${meta.id}.abra2_realigned" }
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/preprocessing/" },
            pattern: "*{cram,crai}",
            // Save bam if save mapped, save as bam and single BAM per file.
            saveAs: { !params.save_output_as_bam && params.abra2_realigned ? "abra2/${meta.id}/${it}" : null }
        ]
    }

}
