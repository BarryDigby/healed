/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/


process {

    withName: 'CAT_FASTQ' {
        publishDir = [
            path: { "${params.outdir}/fastq" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: false
        ]
    }

}


    //
    // Transcript quantification
    //

process {
    withName: '.*:FASTQ_ALIGN_RNA:STAR_ALIGN_QUANT' {
        ext.when   = { ( params.rna_quant.contains('star_salmon') ) }
        ext.prefix = { "${meta.id}.quant" }
        ext.args   = [ "",
        "--quantMode TranscriptomeSAM",
        "--readFilesCommand zcat",
        "--twopassMode Basic",
        "--runRNGseed 0",
        "--outFilterMultimapNmax 20",
        "--alignSJDBoverhangMin 1",
        "--outSAMattributes NH HI AS NM MD",
        "--quantTranscriptomeBan Singleend",
        "--outSAMstrandField intronMotif",
        "--outSAMtype BAM SortedByCoordinate",
        "--outReadsUnmapped None",
        "--outSAMunmapped Within",
        ].join(' ').trim()
        publishDir = [
            [
                path: { "${params.outdir}/preprocessing/" },
                mode: params.publish_dir_mode,
                pattern: "*.bam",
                // Save bam if save mapped, save as bam and single BAM per file.
                enabled: false // do not want to save unsorted transcriptome bams
            ],
            [
                path: { "${params.outdir}/preprocessing/" },
                mode: params.publish_dir_mode,
                pattern: "*.tab",
                // Save bam if save mapped, save as bam and single BAM per file.
                saveAs: { (params.save_mapped ) ? "mapped/${meta.id}/${it}" : null }
            ],
            [
                path: { "${params.outdir}/reports/" },
                mode: params.publish_dir_mode,
                pattern: "*.log",
                saveAs: { ( params.rna_quant.contains('star_salmon') ) ? "star/${meta.id}/${it}" : null }
            ]
        ]
    }

    withName: '.*:FASTQ_ALIGN_RNA:SORT_STATS_QUANT:SAMTOOLS_SORT' {
        ext.when   = { params.rna_quant.contains('star_salmon') }
        ext.prefix = { "${meta.id}.quant" }
        publishDir = [
            path: { "${params.outdir}/preprocessing/" },
            mode: params.publish_dir_mode,
            pattern: "*.bam",
            saveAs: { ( params.save_output_as_bam && params.save_mapped ) ? "mapped/${meta.id}/${it}" : null }
        ]
    }

    withName: '.*:FASTQ_ALIGN_RNA:SORT_STATS_QUANT:SAMTOOLS_INDEX' {
        ext.when   = { params.rna_quant.contains('star_salmon') }
        ext.prefix = { "${meta.id}.quant" }
        publishDir = [
            path: { "${params.outdir}/preprocessing/" },
            mode: params.publish_dir_mode,
            pattern: "*.bai",
            saveAs: { ( params.save_output_as_bam && params.save_mapped ) ? "mapped/${meta.id}/${it}" : null }
        ]
    }

    withName: '.*:FASTQ_ALIGN_RNA:SORT_STATS_QUANT:BAM_STATS_SAMTOOLS:SAMTOOLS_STATS' {
        ext.when   = { params.rna_quant.contains('star_salmon') }
        ext.prefix = { "${meta.id}.quant" }
        publishDir = [
            path: { "${params.outdir}/reports/samtools/${meta.id}" },
            mode: params.publish_dir_mode,
            pattern: "*.stats"
        ]
    }

    withName: '.*:FASTQ_ALIGN_RNA:SORT_STATS_QUANT:BAM_STATS_SAMTOOLS:SAMTOOLS_FLAGSTAT' {
        ext.when   = { params.rna_quant.contains('star_salmon') }
        ext.prefix = { "${meta.id}.quant" }
        publishDir = [
            path: { "${params.outdir}/reports/samtools/${meta.id}" },
            mode: params.publish_dir_mode,
            pattern: "*.flagstat"
        ]
    }

    withName: '.*:FASTQ_ALIGN_RNA:SORT_STATS_QUANT:BAM_STATS_SAMTOOLS:SAMTOOLS_IDXSTATS' {
        ext.when   = { params.rna_quant.contains('star_salmon') }
        ext.prefix = { "${meta.id}.quant" }
        publishDir = [
            path: { "${params.outdir}/reports/samtools/${meta.id}" },
            mode: params.publish_dir_mode,
            pattern: "*.idxstats"
        ]
    }

    withName: '.*:FASTQ_ALIGN_RNA:CONVERT_QUANT' {
        ext.when   = { !params.save_output_as_bam && params.save_mapped }
        ext.prefix = { "${meta.id}.quant" }
        publishDir = [
            path: { "${params.outdir}/preprocessing" },
            mode: params.publish_dir_mode,
            pattern: "*.{cram,crai}",
            saveAs: { ( !params.save_output_as_bam && params.save_mapped ) ? "mapped/${meta.id}/${it}" : null }
        ]
    }

}
