/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/


process {

    withName: 'CAT_FASTQ' {
        publishDir = [
            path: { "${params.outdir}/fastq" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: false
        ]
    }

    // Transcript quantification
    withName: '.*:FASTQ_ALIGN_RNA:STAR_ALIGN_QUANT' {
        ext.when = { ( params.rna_quant.contains('star_salmon') ) }
        ext.args = [ "",
        "--quantMode TranscriptomeSAM",
        "--readFilesCommand zcat",
        "--twopassMode Basic",
        "--runRNGseed 0",
        "--outFilterMultimapNmax 20",
        "--alignSJDBoverhangMin 1",
        "--outSAMattributes NH HI AS NM MD",
        "--quantTranscriptomeBan Singleend",
        "--outSAMstrandField intronMotif",
        "--outSAMtype BAM SortedByCoordinate",
        "--outReadsUnmapped None",
        "--outSAMunmapped Within"
        ].join(' ').trim()
        publishDir = [
            [
                path: { "${params.outdir}/preprocessing/" },
                mode: params.publish_dir_mode,
                pattern: "*.bam",
                // Save bam if save mapped, save as bam and single BAM per file.
                saveAs: { (params.save_output_as_bam && params.save_mapped && meta.size * meta.numLanes == 1) ? "mapped/${meta.id}/${it}" : null }
            ],
            [
                path: { "${params.outdir}/preprocessing/quantification/" },
                mode: params.publish_dir_mode,
                pattern: "*.{out,tab}",
                // Save bam if save mapped, save as bam and single BAM per file.
                saveAs: { (params.save_mapped && meta.size * meta.numLanes == 1) ? "mapped/${meta.id}/${it}" : null }
            ]
        ]
    }

    withName: '.*:FASTQ_ALIGN_RNA:MERGE_BAM|INDEX_MERGE_BAM' {
        publishDir       = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/preprocessing/quantification/" },
            pattern: "*{bam,bai}",
            // Save bam if save mapped, save as bam
            saveAs: { (params.save_output_as_bam && params.save_mapped) ? "mapped/${meta.id}/${it}" : null }
        ]
    }

}
