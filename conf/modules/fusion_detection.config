/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/


process {

    withName: '.*:FUSION_DETECTION:STARFUSION' {
        ext.when   = { params.rna_fusion.contains('star_fusion') }
        publishDir = [
            path: { "${params.outdir}/starfusion" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: '.*:FUSION_DETECTION:FUSIONCATCHER' {
        ext.when   = { params.rna_fusion.contains('fusioncatcher') }
        publishDir = [
            [
                path: { "${params.outdir}" },
                mode: params.publish_dir_mode,
                pattern: "*.txt",
                saveAs: { params.rna_fusion.contains('fusioncatcher') ? "fusioncatcher/${meta.id}/${it}" : null }
            ],
            [
                path: { "${params.outdir}/reports/" },
                mode: params.publish_dir_mode,
                pattern: "*.log",
                saveAs: { ( params.rna_quant.contains('fusioncatcher') ) ? "fusioncatcher/${meta.id}/${it}" : null }
            ]
        ]
    }

    withName: '.*:FUSION_DETECTION:ARRIBA' {
        ext.when   = { params.rna_fusion.contains('arriba') }
        publishDir = [
            path: { "${params.outdir}/arriba" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

}
